embed
<drac2>
using(baglib="4119d62e-6a98-4153-bea9-0a99bb36da2c")
using(craftingutils="aefb7981-b14b-4a31-aa5e-d66ad6437677")
a = &ARGS&
args = argparse(&ARGS&)
craftCvar = "craftingplus_blacksmith"
ch = character()
extraFields = ""

toolProVar = ch.get_cvar("toolProficiencies")

# We need some kind of proficiency to craft
toolProVar = ch.get_cvar("toolProficiencies")
if not toolProVar:
    return f"""-title "{ch.name} attempts to smith! But has no Tool Proficiencies Learned." -desc "Crafting requires tool proficiencies, please see `!tool help` for help adding proficiencies." """

toolProficiencies = load_yaml(toolProVar)

# Validate that we have Smith's Tools proficiency or expertise
if "smithstools" not in toolProficiencies:
    return f"""-title "{ch.name} attempts to smith! But doesn't have Smith's Tool Proficiency." -desc "Blacksmithing requires Smith's Tool proficiency, please see `!tool help` for help adding proficiencies." """

pendingCraft = ch.get_cvar(craftCvar)
if not pendingCraft:
    return f"""-title "{ch.name} has no in-progress blacksmithing projects." -desc "Since nothing is in progress, you have nothing to continue! Try starting a new project with `!blacksmithing`!" """

pendingCraft = load_json(pendingCraft)

# Determine advantage from args
adv = True if "adv" in args else None

# Collect manual roll bonuses
bonus = args.join("b", "+")

# Check for guidance
guidance = "+1d4[guidance]" if args.last("guidance") else ""

# Setup the roll
rollString = ch.skills.strength.d20(adv)

# Add proficiency or expertise
rollString += f"+{ch.stats.prof_bonus}" if toolProficiencies.smithstools == 1 else f"+{ch.stats.prof_bonus * 2}"

# Add commonly supported roll modifiers
rollMods = craftingutils.extract_roll_bonuses(args, ch)
rollString += rollMods[0]
extraFields += rollMods[1]

craftItRoll = vroll(rollString)

# Did we pass the DC to craft and we didn't crit fail?
if craftItRoll.total >= pendingCraft.dc and craftItRoll.result.crit != 2:
    # Success!
    bagMessage = ""

    # If there is more than one check remaining, we don't touch the bags, just update the pending craft
    if pendingCraft.checksRemaining > 1:
        pendingCraft.checksRemaining -= 1
        pendingCraft.checksDone += 1
        pendingCraft.failures = 0
        ch.set_cvar(craftCvar, dump_json(pendingCraft))
        return f""" -title "{ch.name} successfully continues crafting {pendingCraft.name}!" -desc "**Smithing is hard work! You work for 2 IRL hours!**\n**Meta**:\nDC {pendingCraft.dc} Smith's Tools Check\n**Check**:\n{craftItRoll}; Success!" -f "**Crafting**: {pendingCraft.name}\n**Progress**: {pendingCraft.checksDone}/{pendingCraft.checksTotal} Checks ({pendingCraft.checksDone * 2} of {pendingCraft.checksTotal * 2} hours.)\n**Rarity**: {pendingCraft.rarity}\n**Value**: {pendingCraft.value}gp" {extraFields} """
    else:
        # Otherwise, we have successfully crafted the item, update bags if necessary and show value and success message
        # Remove the pending craft since it's complete
        ch.delete_cvar(craftCvar)

        # See if the user has Bags configured and update them
        hasBags = ch.get_cvar("bags")
        if hasBags:
            bags = baglib.load_bags()
            baglib.modify_item(bags, pendingCraft.name, pendingCraft.quantity, "Crafts", True)
            bagMessage += f"""-f "Bags Updated|\n- {pendingCraft.quantity} {pendingCraft.name} added to bags." """
            baglib.save_bags(bags)
        
        return f"""-title "{ch.name} successfully crafts {pendingCraft.name}!" -desc "**Smithing is hard work! You work for 2 IRL hours!**\n**Meta**:\nDC {pendingCraft.dc} Smith's Tools Check\n{craftItRoll}; Success!" -f "**Crafted**: {pendingCraft.name}\n**Rarity**: {pendingCraft.rarity}\n**Value**: {pendingCraft.value}gp" {bagMessage} {extraFields} """
else:
    pendingCraft.failures += 1

    if pendingCraft.failures >= 3:
        # If we have failed 3 times, we have failed to craft the item, note that materials have been lost
        ch.delete_cvar(craftCvar)
        return f"""-title "{ch.name} failed to craft {pendingCraft.name}!" -desc "**Smithing is hard work! You work for 2 IRL hours!**\n**Meta**:\nDC {pendingCraft.dc} Smith's Tools Check\n{craftItRoll}; Failure!" -f "Materials lost!|Unfortunately, you failed to make progress three attempts in a row and the craft is lost!" {extraFields} """
    else:
        ch.set_cvar(craftCvar, dump_json(pendingCraft))
        return f"""-title "{ch.name} failed to make progress on their {pendingCraft.name}!" -desc "**Smithing is hard work! You work for 2 IRL hours!**\n**Meta**:\nDC {pendingCraft.dc} Smith's Tools Check\n{craftItRoll}; Failure!" -f "Failures|Materials can only last so long, you have failed to craft {pendingCraft.failure} of 3 times in a row. At three failures, the materials are lost." {extraFields} """
</drac2>
-footer "CraftingPlus | !blacksmithing continue"