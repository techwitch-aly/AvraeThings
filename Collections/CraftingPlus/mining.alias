embed
<drac2>
args = argparse(&ARGS&)
ch = character()
harvestables = load_json(get_gvar("97458d50-2bde-4751-9af1-952208b92f2e"))
extraFields = ""

# Determine advantage from args
adv = True if "adv" in args else None

# Collect manual roll bonuses
bonus = args.join("b", "+")

# Check for guidance
guidance = "+1d4[guidance]" if args.last("guidance") else ""

# We need to find an ore vein or a gem vein to harvest
# Roll a survival check
rollString = ch.skills.survival.d20(adv)

if bonus:
    rollString += f"+{bonus}"

if guidance != "":
    rollString += guidance
    extraFields += f"""-f "Guidance|Once before the spell ends, the target can roll a d4 and add the number rolled to one ability check of its choice. It can roll the die before or after making the ability check. The spell then ends." """

findItRoll = vroll(rollString)

if findItRoll.total < 12:
    return f"""-desc "**Meta:**\nDC 12 Survival Check\n\nSurvival: {findItRoll}" -f "Unfortunately you didn't find anything on this trek into the mines." {extraFields} """
else:
    options = "```"
    # Roll + 1 because range() is not inclusive of the end, build the list of options
    for i in range(12, findItRoll.total+1):
        n = "dc"+str(i)
        if n in harvestables:
            for j in harvestables[n]:
                options += f"""{harvestables[n][j]["name"]}\n"""
    options += "```"
    return f"""-desc "**Meta:**\nDC 12 Survival Check\n\nSurvival: {findItRoll}" -f "You found things! Choose one of the following to try to mine:\n{options}\nUse `!mining harvest` to gather your resources.\nExample: `!mining harvest iron`" {extraFields} """
</drac2>
-title "{{name}} goes mining!"
-footer "CraftingPlus | !mining"