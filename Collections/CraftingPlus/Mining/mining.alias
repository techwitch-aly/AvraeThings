embed
<drac2>
args = argparse(&ARGS&)
ch = character()
harvestables = load_json(get_gvar("97458d50-2bde-4751-9af1-952208b92f2e"))
kpl_cc = "Knowledge from a Past Life"
fog_cc = "Flash of Genius"
extraFields = ""
minDC = 12

# Determine advantage from args
adv = True if "adv" in args else None

# Collect manual roll bonuses
bonus = args.join("b", "+")

# Check for guidance
guidance = "+1d4[guidance]" if args.last("guidance") else ""

# Check if there is a pending vein found
charMiningData = ch.get_cvar("crafting_plus_mining")
if charMiningData:
    foundMaterials = load_json(charMiningData)
    foundOptions = "\n".join([s.title() for s in foundMaterials])
    return f"""-desc "**Warning!** {name} has already found something to mine and has not yet mined it!" -f "\n\nYou might have found: ```{foundOptions}```\nUse `!mining harvest` to gather your resources.\nExample: `!mining harvest iron`" """

# We need to find an ore vein or a gem vein to harvest
# Roll a survival check
rollString = ch.skills.survival.d20(adv)

# Collect manual roll bonuses
if bonus:
    rollString += f"+{bonus}"

# Add guidance if needed
if guidance != "":
    rollString += guidance
    extraFields += f"""-f "Guidance|Once before the spell ends, the target can roll a d4 and add the number rolled to one ability check of its choice. It can roll the die before or after making the ability check. The spell then ends." """

# Add Knowledge from a Past Life and update Counter
if args.last("kpl") and ch.cc_exists(kpl_cc) and character().get_cc(kpl_cc) > 0:
    rollString += "+1d6[kpl]"
    ch.mod_cc(kpl_cc, -1)
    extraFields += f"""-f "{kpl_cc}|You temporarily remember glimpses of the past, perhaps faded memories from ages ago or a previous life. When you make an ability check that uses a skill, you can roll a d6 immediately after seeing the number on the d20 and add the number on the d6 to the check.\n{ch.cc_str(kpl_cc)}" """
elif args.last("kpl") and ch.cc_exists(kpl_cc) and character().get_cc(kpl_cc) == 0:
    extraFields += f"""-f "{kpl_cc}|You must take a long rest to regain your expended uses.\n{ch.cc_str(kpl_cc)}" """
elif args.last("kpl") and not ch.cc_exists(kpl_cc):
    extraFields += f"""-f "{kpl_cc}|You do not have this ability." """

# Add Flash of Genius and update Counter
if args.last("fog") and ch.cc_exists(fog_cc) and character().get_cc(fog_cc) > 0:
    rollString += f"+{intelligenceMod}"
    ch.mod_cc(fog_cc, -1)
    extraFields += f"""-f "{fog_cc}|You gain the ability to come up with solutions under pressure. When you or another creature you can see within 30 feet of you makes an ability check or a saving throw, you can use your reaction to add your Intelligence modifier (**+{intelligenceMod}**) to the roll.\n{ch.cc_str(fog_cc)}" """
elif args.last("fog") and ch.cc_exists(fog_cc) and character().get_cc(fog_cc) == 0:
    extraFields += f"""-f "{fog_cc}|You must take a long rest to regain your expended uses.\n{ch.cc_str(fog_cc)}" """
elif args.last("fog") and not ch.cc_exists(fog_cc):
    extraFields += f"""-f "{fog_cc}|You do not have this ability." """

findItRoll = vroll(rollString)

if findItRoll.total < minDC:
    return f"""-desc "**Meta:**\nDC {minDC} Survival Check\n\nSurvival: {findItRoll}" -f "Unfortunately you didn't find anything on this trek into the mines." {extraFields} """
else:
    options = "```"
    foundMaterials = []
    # Roll total + 1 because range() is not inclusive of the end
    # build the list of options
    for i in range(minDC, findItRoll.total+1):
        n = "dc"+str(i)
        if n in harvestables:
            for j in harvestables[n]:
                options += f"""{harvestables[n][j]["name"]}\n"""
                foundMaterials.append(harvestables[n][j]["name"].lower())
    options += "```"

    # Properly store the info we need in the cvar
    ch.set_cvar("crafting_plus_mining", dump_json(foundMaterials))
    return f"""-desc "**Meta:**\nDC 12 Survival Check\n\nSurvival: {findItRoll}" -f "You found things! Choose one of the following to try to mine:\n{options}\nUse `!mining harvest` to gather your resources.\nExample: `!mining harvest iron`" {extraFields} """
</drac2>
-title "{{name}} goes mining!"
-footer "CraftingPlus | !mining"