embed
<drac2>
using(baglib="4119d62e-6a98-4153-bea9-0a99bb36da2c")
a = &ARGS&
args = argparse(&ARGS&)
ch = character()
kpl_cc = "Knowledge from a Past Life"
fog_cc = "Flash of Genius"
extraFields = ""
bagMessage = ""

# Determine advantage from args
adv = True if "adv" in args else None

# Collect manual roll bonuses
bonus = args.join("b", "+")

# Check for guidance
guidance = "+1d4[guidance]" if args.last("guidance") else ""

# We need to find a good tree to harvest
# Roll a survival check
rollString = ch.skills.survival.d20(adv)

# Collect manual roll bonuses
if bonus:
    rollString += f"+{bonus}"

# Add guidance if needed
if guidance != "":
    rollString += guidance
    extraFields += f"""-f "Guidance|Once before the spell ends, the target can roll a d4 and add the number rolled to one ability check of its choice. It can roll the die before or after making the ability check. The spell then ends." """

# Add Knowledge from a Past Life and update Counter
if args.last("kpl") and ch.cc_exists(kpl_cc) and character().get_cc(kpl_cc) > 0:
    rollString += "+1d6[kpl]"
    ch.mod_cc(kpl_cc, -1)
    extraFields += f"""-f "{kpl_cc}|You temporarily remember glimpses of the past, perhaps faded memories from ages ago or a previous life. When you make an ability check that uses a skill, you can roll a d6 immediately after seeing the number on the d20 and add the number on the d6 to the check.\n{ch.cc_str(kpl_cc)}" """
elif args.last("kpl") and ch.cc_exists(kpl_cc) and character().get_cc(kpl_cc) == 0:
    extraFields += f"""-f "{kpl_cc}|You must take a long rest to regain your expended uses.\n{ch.cc_str(kpl_cc)}" """
elif args.last("kpl") and not ch.cc_exists(kpl_cc):
    extraFields += f"""-f "{kpl_cc}|You do not have this ability." """

# Add Flash of Genius and update Counter
if args.last("fog") and ch.cc_exists(fog_cc) and character().get_cc(fog_cc) > 0:
    rollString += f"+{intelligenceMod}"
    ch.mod_cc(fog_cc, -1)
    extraFields += f"""-f "{fog_cc}|You gain the ability to come up with solutions under pressure. When you or another creature you can see within 30 feet of you makes an ability check or a saving throw, you can use your reaction to add your Intelligence modifier (**+{intelligenceMod}**) to the roll.\n{ch.cc_str(fog_cc)}" """
elif args.last("fog") and ch.cc_exists(fog_cc) and character().get_cc(fog_cc) == 0:
    extraFields += f"""-f "{fog_cc}|You must take a long rest to regain your expended uses.\n{ch.cc_str(fog_cc)}" """
elif args.last("fog") and not ch.cc_exists(fog_cc):
    extraFields += f"""-f "{fog_cc}|You do not have this ability." """

findItRoll = vroll(rollString)
found = ""
if findItRoll.total <= 5 or findItRoll.result.crit == 2:
    found = "5 pieces of firewood."
elif findItRoll.total <= 10:
    found = "2 wooden branches."
elif findItRoll.total <= 15:
    found = "1 quality branch."
elif findItRoll.total <= 20:
    found = "2 wooden branches and 1 quality branch."
else:
    found = "3 wooden branches and 1 quality branches."

hasBags = ch.get_cvar("bags")
if hasBags:
    bags = baglib.load_bags()

    if findItRoll.total <= 5 or findItRoll.result.crit == 2:
        baglib.modify_item(bags, "Firewood", 5, "Forestry", True)
        bagMessage = f"""-f "Bags Updated|\n- 5 pieces of firewood has been added to your Forestry bag!" """
    elif findItRoll.total <= 10:
        baglib.modify_item(bags, "Wooden Branch", 2, "Forestry", True)
        bagMessage = f"""-f "Bags Updated|\n- 2 wooden branches have been added to your Forestry bag!" """
    elif findItRoll.total <= 15:
        baglib.modify_item(bags, "Quality Branch", 1, "Forestry", True)
        bagMessage = f"""-f "Bags Updated|\n- 1 quality branch has been added to your Forestry bag!" """
    elif findItRoll.total <= 20:
        baglib.modify_item(bags, "Wooden Branch", 2, "Forestry", True)
        baglib.modify_item(bags, "Quality Branch", 1, "Forestry", True)
        bagMessage = f"""-f "Bags Updated|\n- 2 wooden branches have been added to your Forestry bag!\n- 1 quality branch has been added to your Forestry bag!" """
    else:
        baglib.modify_item(bags, "Wooden Branch", 3, "Forestry", True)
        baglib.modify_item(bags, "Quality Branch", 1, "Forestry", True)
        bagMessage = f"""-f "Bags Updated|\n- 3 wooden branches have been added to your Forestry bag!\n- 1 quality branch has been added to your Forestry bag!" """
    
    baglib.save_bags(bags)

return f"""-desc "**Meta:**\nSurvival Check: {findItRoll}; Success!" -f "You found {found}!" {bagMessage} {extraFields} """
</drac2>
-title "{{name}} goes searching the forest for lumber!"
-footer "CraftingPlus | !forestry"