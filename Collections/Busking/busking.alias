embed
<drac2>
a = &ARGS&
args = argparse(&ARGS&)
ch = character()
kpl_cc = "Knowledge from a Past Life"
fog_cc = "Flash of Genius"

# Setup the roll
adv = True if "adv" in args else None
rollString = ch.skills.performance.d20(adv)
extraFields = ""

# Collect manual roll bonuses
bonus = args.join("b", "+")

# Check for guidance
guidance = "+1d4[guidance]" if args.last("guidance") else ""

# Add manual bonuses
if bonus:
    rollString += f"+{bonus}"

# Add guidance
if guidance != "":
    rollString += guidance
    extraFields += f"""-f "Guidance|Once before the spell ends, the target can roll a d4 and add the number rolled to one ability check of its choice. It can roll the die before or after making the ability check. The spell then ends." """

# Add Knowledge from a Past Life and update Counter
if args.last("kpl") and ch.cc_exists(kpl_cc) and character().get_cc(kpl_cc) > 0:
    rollString += "+1d6[kpl]"
    ch.mod_cc(kpl_cc, -1)
    extraFields += f"""-f "{kpl_cc}|You temporarily remember glimpses of the past, perhaps faded memories from ages ago or a previous life. When you make an ability check that uses a skill, you can roll a d6 immediately after seeing the number on the d20 and add the number on the d6 to the check.\n{ch.cc_str(kpl_cc)}" """
elif args.last("kpl") and ch.cc_exists(kpl_cc) and character().get_cc(kpl_cc) == 0:
    extraFields += f"""-f "{kpl_cc}|You must take a long rest to regain your expended uses.\n{ch.cc_str(kpl_cc)}" """
elif args.last("kpl") and not ch.cc_exists(kpl_cc):
    extraFields += f"""-f "{kpl_cc}|You do not have this ability." """

# Add Flash of Genius and update Counter
if args.last("fog") and ch.cc_exists(fog_cc) and character().get_cc(fog_cc) > 0:
    rollString += f"+{intelligenceMod}"
    ch.mod_cc(fog_cc, -1)
    extraFields += f"""-f "{fog_cc}|You gain the ability to come up with solutions under pressure. When you or another creature you can see within 30 feet of you makes an ability check or a saving throw, you can use your reaction to add your Intelligence modifier (**+{intelligenceMod}**) to the roll.\n{ch.cc_str(fog_cc)}" """
elif args.last("fog") and ch.cc_exists(fog_cc) and character().get_cc(fog_cc) == 0:
    extraFields += f"""-f "{fog_cc}|You must take a long rest to regain your expended uses.\n{ch.cc_str(fog_cc)}" """
elif args.last("fog") and not ch.cc_exists(fog_cc):
    extraFields += f"""-f "{fog_cc}|You do not have this ability." """

buskingRoll = vroll(rollString)

if buskingRoll.total >= 15:
    # Success!
    # Double the potential earnings on a crit
    goldString = "2d10" if buskingRoll.result.crit == 1 else "1d10"
    goldRoll = vroll(goldString)
    goldEarned = goldRoll.total
    ch.coinpurse.modify_coins(0, goldEarned)
    return f"""-title "{ch.name}'s performance earned some tips!" -desc "**Meta**:\nDC 15 Performance Check\n**Check**:\n{buskingRoll}; Success!\n\n**Random Tip**:\n{goldRoll}" -f "You earn {goldEarned} gold coins from your performance!" -f "Coinpurse|{ch.coinpurse.coin_str("pp")}\n{ch.coinpurse.coin_str("gp")} (+{goldEarned})\n{ch.coinpurse.coin_str("ep")}\n{ch.coinpurse.coin_str("sp")}\n{ch.coinpurse.coin_str("cp")}" {extraFields} -thumb "{ch.image}" """
else:
    # Failure
    return f"""-title "{ch.name}'s performance did not earn any tips!" -desc "**Meta**:\nDC 15 Performance Check\n**Check**:\n{buskingRoll}; Failure!" -f "You earn no money from your performance." {extraFields} -thumb "{ch.image}" """
</drac2>
-footer "Busking | !busking"